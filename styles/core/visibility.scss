// Mixins
//$prefix : 'cui' !default;

@use '../variables'as *;
@use '../mixins'as *;

@mixin visibility($size) {
    .#{$prefix}-visible#{$size} {
        display: none !important;
    }
}

@mixin hide($size) {
    .#{$prefix}-hidden#{$size} {
        display: none !important;
    }
}

// Definitions
@mixin definitions($options: ()) {
    @if(not-option-disabled($options, 'hidden')) {
        .#{$prefix}-hidden {
            display: none !important;
        }

        @if(not-option-disabled($options, 'responsive')) {
            @include media-screen-min-small {
                @include hide(--s);
            }

            @include media-screen-min-medium {
                @include hide(--m);
            }

            @include media-screen-min-large {
                @include hide(--l);
            }

            @include media-screen-min-xlarge {
                @include hide(--xl);
            }
        }
    }

    @if(not-option-disabled($options, 'visible')) {
        .#{$prefix}-visible {
            visibility: visible !important;
        }

        @if(not-option-disabled($options, 'responsive')) {
            @include media-screen-max-small {
                @include visibility(--s);
            }

            @include media-screen-max-medium {
                @include visibility(--m);
            }

            @include media-screen-max-large {
                @include visibility(--l);
            }

            @include media-screen-max-xlarge {
                @include visibility(--xl);
            }
        }
    }

    @if(not-option-disabled($options, 'landscape')) {
        @media(orientation: landscape) {
            @include visibility("-landscape")
        }
    }

    @if(not-option-disabled($options, 'touch')) {

        /* smartphones, touchscreens */
        @media (hover: none) and (pointer: coarse) {

            .#{$prefix}-hidden-touch {
                @include hidden();
            }
        }

        /* mouse, touch pad */
        @media (hover: hover) and (pointer: fine) {

            .#{$prefix}-hidden-precise {
                @include hidden();
            }
        }
    }

    @if(not-option-disabled($options, 'hover')) {
        .#{$prefix}-hover-trigger {
            &:not(:hover):not(:focus) {
                .#{$prefix}-hidden-hover {
                    @include hidden();
                }
            }


            .#{$prefix}-invisible-hover {
                &:not(:focus-within) {
                    opacity: 0;
                }
            }

            &:hover {
                .#{$prefix}-invisible-hover {
                    opacity: 1;
                }
            }
        }
    }
}