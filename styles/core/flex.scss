@use "../variables.scss"as *;
@use "../mixins.scss"as *;

@mixin order($size: "") {
    @for $i from 1 through 10 {
        .#{$prefix}-order-#{$i}#{$size} {
            order: $i;
        }
    }
}

@mixin flex-base {
    .#{$prefix}-flex {
        display        : flex !important;
        flex-wrap      : wrap;
        justify-content: start;
        align-items    : flex-start;
    }
}

@mixin flex-align($size: "") {
    .#{$prefix}-flex {

        >* {
            flex: 0 1 auto;
        }

        &.#{$prefix}-center#{$size} {
            justify-content: center !important;
        }

        &.#{$prefix}-evenly#{$size} {
            justify-content: space-evenly !important;
        }

        &.#{$prefix}-between#{$size} {
            justify-content: space-between !important;
        }

        &.#{$prefix}-right#{$size} {
            justify-content: flex-end !important;
        }

        &.#{$prefix}-left#{$size} {
            justify-content: flex-start !important;
        }

        // ALign

        &.#{$prefix}-middle#{$size} {
            align-items: center !important;
        }

        &.#{$prefix}-end#{$size} {
            align-items: flex-end !important;
        }

        &.#{$prefix}-stretch#{$size} {
            align-items: stretch !important;
        }
    }
}



@mixin flex-direction($size: "") {
    .#{$prefix}-flex {
        &.#{$prefix}-flex-direction-column#{$size} {
            flex-direction: column;
        }

        &.#{$prefix}-flex-direction-column-reverse#{$size} {
            flex-direction: column-reverse;
        }

        &.#{$prefix}-flex-direction-row-reverse#{$size} {
            flex-direction: row-reverse;
        }

        &.#{$prefix}-flex-direction-row#{$size} {
            flex-direction: row;
        }
    }
}

@mixin flex-order($size: "") {
    @include order($size);
}


@mixin flex-wrap {
    .#{$prefix}-flex {
        &.#{$prefix}-nowrap {
            flex-wrap: nowrap;
        }

        &.#{$prefix}-wrap-rev {
            flex-wrap: wrap-reverse;
        }
    }
}

@mixin flex-grow($size: "") {
    .#{$prefix}-flex {
        .#{$prefix}-flex-grow#{$size} {
            flex: 1 1 auto !important;
        }

        .#{$prefix}-flex-shrink#{$size} {
            flex: 0 1 auto !important;
        }

        .#{$prefix}-flex-auto#{$size} {
            flex: 0 0 auto !important;
        }
    }
}

@mixin flex-center {
    .#{$prefix}-flex-center {
        display        : flex !important;
        justify-content: center;
        align-items    : center;
        overflow       : hidden;
    }
}


@mixin flex-responsive($options) {
    @include media-screen-min-small {
        @if(not-option-disabled($options, 'grow')) {
            @include flex-grow(--s);
        }

        @if(not-option-disabled($options, 'order')) {
            @include order(--s);
        }

        @if(not-option-disabled($options, 'direction')) {
            @include flex-direction(--s);
        }

        @if(not-option-disabled($options, 'align')) {
            @include flex-align(--s);
        }
    }

    @include media-screen-min-medium {
        @if(not-option-disabled($options, 'grow')) {
            @include flex-grow(--m);
        }

        @if(not-option-disabled($options, 'order')) {
            @include order(--m);
        }

        @if(not-option-disabled($options, 'direction')) {
            @include flex-direction(--m);
        }

        @if(not-option-disabled($options, 'align')) {
            @include flex-align(--m);
        }
    }

    @include media-screen-min-large {
        @if(not-option-disabled($options, 'grow')) {
            @include flex-grow(--l);
        }

        @if(not-option-disabled($options, 'order')) {
            @include order(--l);
        }

        @if(not-option-disabled($options, 'direction')) {
            @include flex-direction(--l);
        }

        @if(not-option-disabled($options, 'align')) {
            @include flex-align(--l);
        }
    }

    @include media-screen-min-xlarge {
        @if(not-option-disabled($options, 'grow')) {
            @include flex-grow(--xl);
        }

        @if(not-option-disabled($options, 'order')) {
            @include order(--xl);
        }

        @if(not-option-disabled($options, 'direction')) {
            @include flex-direction(--xl);
        }

        @if(not-option-disabled($options, 'align')) {
            @include flex-align(--xl);
        }
    }
}

@mixin definitions($options: ()) {
    @include flex-base();

    @if(not-option-disabled($options, 'center')) {
        @include flex-center()
    }

    @if(not-option-disabled($options, 'direction')) {
        @include flex-direction();
    }

    @if(not-option-disabled($options, 'grow')) {
        @include flex-grow();

    }

    @if(not-option-disabled($options, 'wrap')) {
        @include flex-wrap();
    }

    @if(not-option-disabled($options, 'order')) {
        @include flex-order();
    }

    @if(not-option-disabled($options, 'align')) {
        @include flex-align();
    }

    @if(not-option-disabled($options, 'responsive')) {
        @include flex-responsive($options);
    }

}