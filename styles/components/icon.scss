@use '../variables'as *;
@use '../mixins'as *;

$icon-color-default      : $component-color-default;
$icon-color-inverse      : $component-color-inverse;
$icon-color-inverse-dark : $component-color-inverse-dark;
$icon-color-default-dark : $component-color-default-dark;

$icon-border-color             : $component-border-default; //$component-color-muted;
$icon-border-color-hover       : $component-border-default-hover; //$component-color-default;
$icon-border-color-active      : $component-border-default-active; //$component-color-active;
$icon-border-color-dark        : $component-border-default-dark; //$component-color-muted-dark;
$icon-border-color-hover-dark  : $component-border-default-hover-dark; //$component-color-default-dark;
$icon-border-color-active-dark : $component-border-default-active-dark; //$component-color-default-dark;

$icon-button-background-default            : $component-background-default;
$icon-button-background-inverse            : $component-background-inverse;
$icon-button-background-inverse-hover      : $component-color-muted;
$icon-button-background-default-dark       : $component-background-default-dark;
$icon-button-background-inverse-dark       : $component-background-inverse-dark;
$icon-button-background-inverse-hover-dark : $component-color-muted-dark;

$icon-color-accent   : $component-background-accent;
$icon-color-secondary: $component-background-secondary;
$icon-color-error    : $component-background-error;
$icon-color-warning  : $component-background-warning;
$icon-color-success  : $component-background-success;

$icon-color-accent-dark   : $component-background-accent-dark;
$icon-color-secondary-dark: $component-background-secondary-dark;
$icon-color-error-dark    : $component-background-error-dark;
$icon-color-warning-dark  : $component-background-warning-dark;
$icon-color-success-dark  : $component-background-success-dark;

@mixin for-color-button {
    &.#{$prefix}-button {

        &.#{$prefix}-accent,
        &.#{$prefix}-secondary,
        &.#{$prefix}-error,
        &.#{$prefix}-warning,
        &.#{$prefix}-success {
            @content;
        }
    }
}

@mixin icon {

    a.#{$prefix}-icon,
    a.#{$prefix}-svg {
        cursor: pointer;
    }

    span.#{$prefix}-svg,
    span.#{$prefix}-icon {
        border    : 1px solid transparent;
        box-sizing: border-box;
    }

    .#{$prefix}-icon,
    .#{$prefix}-icon-button,
    .#{$prefix}-svg {
        display        : inline-flex;
        align-items    : center;
        justify-content: center;
        text-align     : center;
        line-height    : 20px;
        vertical-align : middle;
        text-decoration: none;
        color          : $icon-color-default;

        svg {
            box-sizing     : border-box;
            height         : auto;
            order          : 0;
            fill           : none;
            stroke         : $icon-color-default;
            stroke-opacity : 1;
            stroke-width   : 1px;
            stroke-linecap : round;
            stroke-linejoin: miter;
        }

        &.cui-bold {
            svg {
                stroke-width: 2px;
            }

        }

        @include for-color-button {
            @include get-icon-color-style($icon-color-inverse);
        }

        &.#{$prefix}-dark,
        &.#{$prefix}-inverse {
            @include get-icon-color-style($icon-color-inverse);
        }


        /**
    * if there is any element
    */

        &.#{$prefix}-icon-margin {
            &>svg {
                margin-right: 8px;
            }
        }

    }


    // For colored containers
    @include dark-parent-container {
        @include not-light-component {

            .#{$prefix}-icon,
            .#{$prefix}-icon-button {
                @include get-icon-color-style($icon-color-inverse !important);
            }
        }
    }
}

@mixin icon-theme {

    .#{$prefix}-icon,
    .#{$prefix}-svg {
        &.#{$prefix}-accent {
            @include get-icon-color-style($icon-color-accent);
        }

        &.#{$prefix}-secondary {
            @include get-icon-color-style($icon-color-secondary);
        }
    }
}

@mixin icon-theme-dark {
    @include mode-dark {

        .#{$prefix}-icon,
        .#{$prefix}-svg {

            &.#{$prefix}-accent {
                @include get-icon-color-style($icon-color-accent-dark);
            }

            &.#{$prefix}-secondary {
                @include get-icon-color-style($icon-color-secondary-dark);
            }
        }
    }
}

@mixin icon-signal {

    .#{$prefix}-icon,
    .#{$prefix}-svg {
        &.#{$prefix}-success {
            @include get-icon-color-style($icon-color-success);
        }

        &.#{$prefix}-warning {
            @include get-icon-color-style($icon-color-warning);
        }

        &.#{$prefix}-error {
            @include get-icon-color-style($icon-color-error);
        }
    }
}

@mixin icon-signal-dark {
    @include mode-dark {

        .#{$prefix}-icon,
        .#{$prefix}-svg {
            &.#{$prefix}-success {
                @include get-icon-color-style($icon-color-success-dark);
            }

            &.#{$prefix}-warning {
                @include get-icon-color-style($icon-color-warning-dark);
            }

            &.#{$prefix}-error {
                @include get-icon-color-style($icon-color-error-dark);
            }
        }
    }
}

@mixin icon-fill {

    .#{$prefix}-icon,
    .#{$prefix}-svg {
        &:not(.#{$prefix}-icon-button) {
            &.#{$prefix}-fill {
                &>svg {
                    path.fill {
                        fill: $icon-color-default;
                    }
                }

                &.#{$prefix}-inverse {
                    svg {
                        path.fill {
                            fill: $icon-color-inverse;
                        }
                    }
                }

                &.#{$prefix}-accent {
                    svg {
                        path.fill {
                            fill: $icon-color-accent;
                        }
                    }
                }

                &.#{$prefix}-secondary {
                    svg {
                        path.fill {
                            fill: $icon-color-secondary;
                        }
                    }
                }

                &.#{$prefix}-success {
                    svg {
                        path.fill {
                            fill: $icon-color-success;
                        }
                    }
                }

                &.#{$prefix}-warning {
                    svg {
                        path.fill {
                            fill: $icon-color-warning;
                        }
                    }
                }

                &.#{$prefix}-error {
                    svg {
                        path.fill {
                            fill: $icon-color-error;
                        }
                    }
                }


                @include for-color-button {
                    svg {
                        path.fill {
                            fill: $icon-color-inverse;
                        }
                    }
                }
            }
        }
    }

    @include mode-dark {
        .#{$prefix}-icon {
            &:not(.#{$prefix}-icon-button) {
                &.#{$prefix}-fill {

                    @include not-colors {
                        &>svg {
                            path.fill {
                                fill: $icon-color-default-dark;
                            }
                        }
                    }


                    &.#{$prefix}-inverse {
                        svg {
                            path.fill {
                                fill: $icon-color-inverse-dark;
                            }
                        }
                    }
                }
            }
        }
    }


}

@mixin icon-button-fill {
    .#{$prefix}-icon-button.#{$prefix}-fill {
        &>svg {
            path.fill {
                fill: $icon-color-inverse;
            }
        }

        @include not-colors {
            :not(.#{$prefix}-inverse) {
                &>svg {
                    path.fill {
                        fill: $icon-color-default;
                    }
                }
            }
        }
    }
}

@mixin icon-button-fill-dark {
    @include mode-dark {
        .#{$prefix}-icon-button.#{$prefix}-fill {
            &>svg {
                path.fill {
                    fill: $icon-color-default-dark;
                }
            }

            &.#{$prefix}-inverse {
                &>svg {
                    path.fill {
                        fill: $icon-color-default;
                    }
                }
            }
        }
    }

}

@mixin stroke-theme {
    path {
        &.#{$prefix}-accent {
            stroke: $icon-color-accent;
        }

        &.#{$prefix}-secondary {
            stroke: $icon-color-secondary;
        }

        &.#{$prefix}-icon-dark {
            stroke: $icon-color-default-dark;
        }
    }
}

@mixin stroke-theme-dark {
    @include mode-dark {
        path {
            &.#{$prefix}-accent {
                stroke: $icon-color-accent !important;
            }

            &.#{$prefix}-secondary {
                stroke: $icon-color-secondary !important;
            }
        }
    }
}

@mixin stroke-signals {
    path {
        &.#{$prefix}-success {
            stroke: $icon-color-success;
        }

        &.#{$prefix}-warning {
            stroke: $icon-color-warning;
        }

        &.#{$prefix}-error {
            stroke: $icon-color-error;
        }
    }
}

@mixin stroke-signals-dark {
    @include mode-dark {
        path {
            &.#{$prefix}-success {
                stroke: $icon-color-success-dark !important;
            }

            &.#{$prefix}-warning {
                stroke: $icon-color-warning-dark !important;
            }

            &.#{$prefix}-error {
                stroke: $icon-color-error-dark !important;
            }
        }
    }
}


@mixin icon-button {
    .#{$prefix}-icon-button {
        cursor : pointer;
        outline: none;
        @include component-padding(small, true);
        background-color: transparent;
        border          : 1px solid transparent;
        border-radius   : 100px;
        @include createHighlight(100px, $highlight-color-dark);

        &.#{$prefix}-default {
            border-color    : $icon-border-color;
            background-color: $icon-button-background-default;
        }

        &.#{$prefix}-large {
            @include component-padding(normal, true);
        }

        &.#{$prefix}-inverse {
            border-color    : $icon-border-color-dark;
            background-color: $icon-button-background-inverse;
        }

        &:hover {
            &.#{$prefix}-default {
                border-color: $icon-border-color-hover;
            }

            &.#{$prefix}-inverse {
                border-color    : $icon-border-color-hover-dark;
                background-color: $icon-button-background-inverse-hover;
            }
        }

        &:focus,
        &:active {

            &.#{$prefix}-default {
                border-color: $icon-border-color-active;
            }

            &.#{$prefix}-inverse {
                border-color    : $icon-border-color-active-dark;
                background-color: $icon-button-background-inverse-hover;
            }
        }
    }
}

@mixin icon-button-theme {
    .#{$prefix}-icon-button {

        &.#{$prefix}-accent,
        &.#{$prefix}-secondary {
            @include get-icon-color-style($icon-color-default-dark !important);
        }
    }
}

@mixin icon-button-signal {
    .#{$prefix}-icon-button {

        &.#{$prefix}-success,
        &.#{$prefix}-warning,
        &.#{$prefix}-error {
            @include get-icon-color-style($icon-color-default-dark !important);
        }
    }
}



@mixin icon-button-print {
    @include mode-print {}
}

@mixin icon-nav {
    ul.#{$prefix}-icon-nav {
        list-style: none;
        padding   : 0px;
        margin    : 0px;
        display   : flex;

        &>li {
            box-sizing: border-box;
            display   : inline-block;
            @include component-padding(small, true);
        }

    }
}

@mixin icon-dark {
    @include mode-dark {

        .#{$prefix}-icon-button,
        .#{$prefix}-icon,
        .#{$prefix}-svg {
            @include get-icon-color-style($icon-color-default-dark);

            &.#{$prefix}-inverse {
                @include get-icon-color-style($icon-color-inverse-dark);
            }


            // }

            @include for-color-button {
                @include get-icon-color-style($icon-color-inverse !important);
            }
        }
    }
}



@mixin icon-button-dark {
    @include mode-dark {
        .#{$prefix}-icon-button {
            &.#{$prefix}-default {
                border-color    : $icon-border-color-dark;
                background-color: $icon-button-background-default-dark;
            }

            &.#{$prefix}-inverse {
                border-color    : $icon-border-color;
                background-color: $icon-button-background-inverse-dark;
            }


            &:hover {
                &.#{$prefix}-default {
                    border-color: $icon-border-color-hover-dark;
                }

                &.#{$prefix}-inverse {
                    border-color    : $icon-border-color-hover;
                    background-color: $icon-button-background-inverse-hover-dark;
                }
            }

            &:active {
                &.#{$prefix}-default {
                    border-color: $icon-border-color-active-dark;
                }

                &.#{$prefix}-inverse {
                    border-color    : $icon-border-color-active;
                    background-color: $icon-button-background-inverse-hover-dark;
                }
            }
        }
    }
}

@mixin icon-print {
    @include mode-print {

        .#{$prefix}-icon-button,
        .#{$prefix}-icon,
        .#{$prefix}-svg {
            @include get-icon-color-style($component-print-color);

            &.#{$prefix}-button {
                @include get-icon-color-style($component-print-color);
            }
        }
    }
}

@mixin icon-button-print {
    @include mode-print {
        .#{$prefix}-icon-button {

            &.#{$prefix}-default,
            &.#{$prefix}-inverse {
                border-color    : $component-print-border;
                background-color: $component-print-background;
            }
        }
    }
}


@mixin definitions($options: ()) {
    @include icon();
    @include icon-button();

    @if(not-option-disabled($options, 'fill')) {
        @include icon-fill();
        @include icon-button-fill();
        @include icon-button-fill-dark();
    }

    @if(not-option-disabled($options, 'dark')) {
        @include icon-dark();
        @include icon-button-dark();
    }

    @if(not-option-disabled($options, 'print')) {
        @include icon-print();
        @include icon-button-print();
    }

    @if(not-option-disabled($options, 'nav')) {
        @include icon-nav();
    }

    @if(not-option-disabled($options, 'theme')) {
        @include stroke-theme();
        @include icon-theme();
        @include icon-button-theme();

        @if(not-option-disabled($options, 'dark')) {
            @include icon-theme-dark();
            @include stroke-theme-dark();
        }
    }

    @if(not-option-disabled($options, 'signal')) {
        @include stroke-signals();
        @include icon-signal();
        @include icon-button-signal();

        @if(not-option-disabled($options, 'dark')) {
            @include icon-signal-dark();
            @include stroke-signals-dark();
        }
    }

}