@use '../variables'as *;
@use '../mixins'as *;

$transition-toggle-time      : $animation-duration-short;
$transition-toggle-time-long : $animation-duration-default;
$transition-toggle-delay     : $animation-duration-short;

$transition-container-padding         : $padding-global;
$transition-container-background      : $component-background-default;
$transition-container-background-dark : $component-background-default-dark;
$transition-container-color-dark      : $component-color-default-dark;

$transition-container-header-font-size: $font-large;

@mixin transitions {
    .#{$prefix}-transition-trigger {
        overflow: hidden;

        .#{$prefix}-delay {
            transition-delay: $transition-toggle-delay;
        }

        [class*="#{$prefix}-transition"] {
            transition-duration       : $transition-toggle-time;
            transition-timing-function: ease-out;
        }

        .#{$prefix}-transition-scale {
            transform          : scale(0);
            transition-property: transform;
        }

        .#{$prefix}-transition-fade {
            opacity            : 0;
            transition-property: opacity;
        }

        [class*="#{$prefix}-transition-slide"] {
            opacity            : 0;
            transition-property: opacity, transform;
        }

        .#{$prefix}-transition-slide-top {
            transform: translateY(-100%);
        }

        .#{$prefix}-transition-slide-bottom {
            transform: translateY(100%);
        }

        .#{$prefix}-transition-slide-left {
            transform: translateX(-100%);
        }

        .#{$prefix}-transition-slide-right {
            transform: translateX(100%);
        }

        .#{$prefix}-transition-slide-top--s {
            transform: translateY(-30%);
        }

        .#{$prefix}-transition-slide-bottom--s {
            transform: translateY(30%);
        }

        .#{$prefix}-transition-slide-left--s {
            transform: translateX(-30%);
        }

        .#{$prefix}-transition-slide-right--s {
            transform: translateX(30%);
        }

        &:hover {
            .#{$prefix}-transition-scale {
                transform: scale(1);
            }

            .#{$prefix}-transition-fade {
                opacity: 1;
            }

            [class*="#{$prefix}-transition-slide"] {
                opacity  : 1;
                transform: translate(0, 0);
            }
        }
    }
}

@mixin transitions-reverse {
    .#{$prefix}-transition-trigger {
        overflow: hidden;

        .#{$prefix}-transition-scale-reverse {
            transform          : scale(1);
            transition-property: transform;
        }

        .#{$prefix}-transition-fade-reverse {
            opacity: 1;
        }

        //
        [class*="#{$prefix}-transition-slide-reverse"] {
            opacity  : 1;
            transform: translate(0, 0);
        }

        &:hover {
            .#{$prefix}-transition-scale-reverse {
                transform: scale(0);
            }

            .#{$prefix}-transition-fade-reverse {
                opacity: 0;
            }

            [class*="#{$prefix}-transition-slide-reverse"] {
                opacity: 0;
            }

            .#{$prefix}-transition-slide-reverse-top {
                transform: translateY(-100%);
            }

            .#{$prefix}-transition-slide-reverse-bottom {
                transform: translateY(100%);
            }

            .#{$prefix}-transition-slide-reverse-left {
                transform: translateX(-100%);
            }

            .#{$prefix}-transition-slide-reverse-right {
                transform: translateX(100%);
            }

            .#{$prefix}-transition-slide-reverse-top--s {
                transform: translateY(-30%);
            }

            .#{$prefix}-transition-slide-reverse-bottom--s {
                transform: translateY(30%);
            }

            .#{$prefix}-transition-slide-reverse-left--s {
                transform: translateX(-30%);
            }

            .#{$prefix}-transition-slide-reverse-right--s {
                transform: translateX(30%);
            }
        }
    }
}

@mixin transition-details {
    .#{$prefix}-transition-trigger.#{$prefix}-position-relative {
        overflow: hidden;
        position: relative;

        .#{$prefix}-transition-container {
            position  : absolute;
            box-sizing: border-box;

            width  : 100%;
            height : 100%;
            top    : 0px;
            left   : 0px;
            z-index: 1;

            .#{$prefix}-transition-wrapper {
                position: relative;
                width   : 100%;
                height  : 100%;

                &:after {
                    content         : "";
                    position        : absolute;
                    background-color: $transition-container-background;
                    opacity         : 0;
                    width           : 100%;
                    height          : 100%;
                    top             : 0px;
                    left            : 0px;
                    z-index         : -1;
                    transition      : opacity $transition-toggle-time ease-out;

                }

                .#{$prefix}-transition-header {
                    font-size : $transition-container-header-font-size;
                    padding   : $transition-container-padding;
                    opacity   : 0;
                    transition: opacity $transition-toggle-time-long ease-out;
                    z-index   : 1;
                }

                .#{$prefix}-transition-details {
                    padding  : $transition-container-padding;
                    z-index  : 1;
                    opacity  : 0;
                    transform: translateY(100%);
                    transition: transform $transition-toggle-time-long ease-out,
                        opacity $transition-toggle-time-long ease;
                }
            }
        }

        &.#{$prefix}-active,
        &:hover {
            .#{$prefix}-transition-container {
                .#{$prefix}-transition-wrapper {
                    &:after {
                        opacity: 1;
                    }


                    .#{$prefix}-transition-header {
                        opacity: 1;
                    }

                    .#{$prefix}-transition-details {
                        transform: translateY(0px);
                        opacity  : 1;
                    }
                }


            }
        }

        &.cui-transition-slide-up {
            .#{$prefix}-transition-container {
                height: auto;
                bottom: 0px;
                top   : auto;

                transform: translateY(calc(100% - #{$transition-container-header-font-size} - (#{$transition-container-padding}*2) - 6px));

                .#{$prefix}-transition-wrapper {
                    height: auto;

                    &:after {
                        opacity   : 0.5;
                        transition: opacity $transition-toggle-time-long ease-out;
                    }

                    .#{$prefix}-transition-header {
                        opacity: 0.8;
                    }
                }
            }

            &.#{$prefix}-active,
            &:hover {
                .#{$prefix}-transition-container {
                    transform: translateY(0px);

                    .#{$prefix}-transition-wrapper {
                        &:after {
                            opacity: 1;
                        }

                        .#{$prefix}-transition-header {
                            opacity: 1;
                        }
                    }
                }
            }
        }

        &.#{$prefix}-inverse {
            color: $transition-container-color-dark;

            .#{$prefix}-transition-wrapper {
                &:after {
                    background-color: $transition-container-background-dark;
                }
            }
        }

    }

}


@mixin transition-details-dark {
    @include mode-dark {
        .#{$prefix}-transition-trigger.#{$prefix}-position-relative {
            .#{$prefix}-transition-container {
                .#{$prefix}-transition-wrapper {
                    &:after {
                        background-color: $transition-container-background-dark;
                    }
                }
            }
        }
    }
}

@mixin definitions($options:()) {
    @include transitions();

    @if(not-option-disabled($options, 'reverse')) {
        @include transitions-reverse();
    }

    @if(not-option-disabled($options, 'details')) {
        @include transition-details();

        @if(not-option-disabled($options, 'dark')) {
            @include transition-details-dark();
        }
    }


}