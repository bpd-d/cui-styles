@use '../variables'as *;
@use '../mixins'as *;

$transition-toggle-time : $animation-duration-short;
$transition-toggle-delay: $animation-duration-short;


@mixin transitions {
    .#{$prefix}-transition-trigger {
        overflow: hidden;

        .#{$prefix}-delay {
            transition-delay: $transition-toggle-delay;
        }

        [class*="#{$prefix}-transition"] {
            transition-duration       : $transition-toggle-time;
            transition-timing-function: ease-out;
        }

        .#{$prefix}-transition-scale {
            transform          : scale(0);
            transition-property: transform;
        }

        .#{$prefix}-transition-fade {
            opacity            : 0;
            transition-property: opacity;
        }

        [class*="#{$prefix}-transition-slide"] {
            opacity            : 0;
            transition-property: opacity, transform;
        }

        .#{$prefix}-transition-slide-top {
            transform: translateY(-100%);
        }

        .#{$prefix}-transition-slide-bottom {
            transform: translateY(100%);
        }

        .#{$prefix}-transition-slide-left {
            transform: translateX(-100%);
        }

        .#{$prefix}-transition-slide-right {
            transform: translateX(100%);
        }

        .#{$prefix}-transition-slide-top--s {
            transform: translateY(-30%);
        }

        .#{$prefix}-transition-slide-bottom--s {
            transform: translateY(30%);
        }

        .#{$prefix}-transition-slide-left--s {
            transform: translateX(-30%);
        }

        .#{$prefix}-transition-slide-right--s {
            transform: translateX(30%);
        }

        &:hover {
            .#{$prefix}-transition-scale {
                transform: scale(1);
            }

            .#{$prefix}-transition-fade {
                opacity: 1;
            }

            [class*="#{$prefix}-transition-slide"] {
                opacity  : 1;
                transform: translate(0, 0);
            }
        }
    }
}

@mixin transitions-reverse {
    .#{$prefix}-transition-trigger {
        overflow: hidden;

        .#{$prefix}-transition-scale-reverse {
            transform          : scale(1);
            transition-property: transform;
        }

        .#{$prefix}-transition-fade-reverse {
            opacity: 1;
        }

        //
        [class*="#{$prefix}-transition-slide-reverse"] {
            opacity  : 1;
            transform: translate(0, 0);
        }

        &:hover {
            .#{$prefix}-transition-scale-reverse {
                transform: scale(0);
            }

            .#{$prefix}-transition-fade-reverse {
                opacity: 0;
            }

            [class*="#{$prefix}-transition-slide-reverse"] {
                opacity: 0;
            }

            .#{$prefix}-transition-slide-reverse-top {
                transform: translateY(-100%);
            }

            .#{$prefix}-transition-slide-reverse-bottom {
                transform: translateY(100%);
            }

            .#{$prefix}-transition-slide-reverse-left {
                transform: translateX(-100%);
            }

            .#{$prefix}-transition-slide-reverse-right {
                transform: translateX(100%);
            }

            .#{$prefix}-transition-slide-reverse-top--s {
                transform: translateY(-30%);
            }

            .#{$prefix}-transition-slide-reverse-bottom--s {
                transform: translateY(30%);
            }

            .#{$prefix}-transition-slide-reverse-left--s {
                transform: translateX(-30%);
            }

            .#{$prefix}-transition-slide-reverse-right--s {
                transform: translateX(30%);
            }
        }
    }
}

@mixin definitions($options:()) {
    @include transitions();

    @if(not-option-disabled($options, 'reverse')) {
        @include transitions-reverse();
    }


}