@use "../variables.scss"as *;
@use "../mixins.scss"as *;

@mixin order($size: "") {
    @for $i from 1 through 10 {
        .#{$prefix}-order-#{$i}#{$size} {
            order: $i;
        }
    }
}

@mixin common($size: "") {
    .#{$prefix}-flex {
        &.#{$prefix}-center#{$size} {
            justify-content: center !important;
        }

        &.#{$prefix}-evenly#{$size} {
            justify-content: space-evenly !important;
        }

        &.#{$prefix}-between#{$size} {
            justify-content: space-between !important;
        }

        &.#{$prefix}-right#{$size} {
            justify-content: flex-end !important;
        }

        &.#{$prefix}-left#{$size} {
            justify-content: flex-start !important;
        }

        // ALign

        &.#{$prefix}-middle#{$size} {
            align-items: center !important;
        }

        &.#{$prefix}-end#{$size} {
            align-items: flex-end !important;
        }

        &.#{$prefix}-stretch#{$size} {
            align-items: stretch !important;
        }

        // Items

        .#{$prefix}-flex-grow#{$size} {
            flex: 1 1 auto !important;
        }

        .#{$prefix}-flex-shrink#{$size} {
            flex: 0 0 auto !important;
        }

        .#{$prefix}-flex-auto#{$size} {
            flex: 1 1 auto !important;
        }
    }
}

@mixin definitions {
    .#{$prefix}-flex {
        display        : flex !important;
        flex-wrap      : wrap;
        justify-content: start;
        align-items    : flex-start;
        // Justify

        &.#{$prefix}-center {
            justify-content: center;
        }

        &.#{$prefix}-right {
            justify-content: flex-end;
        }

        &.#{$prefix}-left {
            justify-content: flex-start;
        }

        &.#{$prefix}-evenly {
            justify-content: space-evenly;
        }

        &.#{$prefix}-between {
            justify-content: space-between;
        }

        // ALign

        &.#{$prefix}-middle {
            align-items: center;
        }

        &.#{$prefix}-end {
            align-items: flex-end;
        }

        &.#{$prefix}-stretch {
            align-items: stretch;
        }

        // Wrap

        &.#{$prefix}-nowrap {
            flex-wrap: nowrap;
        }

        &.#{$prefix}-wrap-rev {
            flex-wrap: wrap-reverse;
        }

        // Items

        .#{$prefix}-flex-grow {
            flex: 1 1 auto;
        }

        .#{$prefix}-flex-shrink {
            flex: 0 1 auto;
        }

    }

    @include order();

    @include media-screen-min-small {
        @include order(--s);
        @include common(--s);
    }

    @include media-screen-min-medium {
        @include order(--m);
        @include common(--m);
    }

    @include media-screen-min-large {
        @include order(--l);
        @include common(--l);
    }

    @include media-screen-min-xlarge {
        @include order(--xl);
        @include common(--xl);
    }

    .#{$prefix}-flex-center {
        display        : flex !important;
        justify-content: center;
        align-items    : center;
        overflow       : hidden;
    }
}